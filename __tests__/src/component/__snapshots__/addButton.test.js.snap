// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddButton should render correct 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddButton />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          onClick={[Function]}
        >
          <span
            className="glyphicon glyphicon-plus-sign add-icon"
          />
        </div>,
        <Connect(EditModal)
          defaultDescription=""
          defaultDueDatetime={0}
          onCancel={[Function]}
          onSave={[Function]}
          title="Add Event"
          visible={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="glyphicon glyphicon-plus-sign add-icon"
          />,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "glyphicon glyphicon-plus-sign add-icon",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "defaultDescription": "",
          "defaultDueDatetime": 0,
          "onCancel": [Function],
          "onSave": [Function],
          "title": "Add Event",
          "visible": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            onClick={[Function]}
          >
            <span
              className="glyphicon glyphicon-plus-sign add-icon"
            />
          </div>,
          <Connect(EditModal)
            defaultDescription=""
            defaultDueDatetime={0}
            onCancel={[Function]}
            onSave={[Function]}
            title="Add Event"
            visible={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="glyphicon glyphicon-plus-sign add-icon"
            />,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "glyphicon glyphicon-plus-sign add-icon",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultDescription": "",
            "defaultDueDatetime": 0,
            "onCancel": [Function],
            "onSave": [Function],
            "title": "Add Event",
            "visible": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
